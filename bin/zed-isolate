#!/bin/bash

set -e
exec > "/var/run/user/1000/zed-isolate.log" 2>&1

if [ "$1" != "" ]; then
  cd "$1"
fi

if [[ ! -f package.json ]]; then
  echo "No npm project to use Dev Container"
  flatpak run dev.zed.Zed ./
  exit 0
fi

if [[ ! -f .devcontainer.json && ! -d .devcontainer ]]; then
  echo "Create Dev Container"
  cp ~/Dev/environment/devcontainer/devcontainer.json .devcontainer.json
  if [ -d .git ]; then
    echo '.devcontainer.json' >> .git/info/exclude
  fi
fi

~/Dev/environment/bin/dev --up | \
  zenity --progress --text="Starting" --title="Dev Container" --pulsate --auto-close --no-cancel

project=$(basename $(pwd))
search_pattern="vsc-$project-[0-9a-f]\+-uid"
container_id=$(podman ps --no-trunc --format '{{.ID}} {{.Image}}' | grep "$search_pattern" | awk '{print $1}')

if [ "$container_id" == "" ]; then
  zenity --error --title="Dev Container Error" --text="Running container was not found"
fi

while true; do
  port=$(shuf -i 1024-9999 -n 1)
  if ! ss -tuln | grep -q ":${port}\s"; then
    break
  fi
done

setsid podman exec -d --user root $container_id /usr/sbin/sshd -p $port -D

flatpak run dev.zed.Zed ssh://ai@localhost:$port/workspaces/$project

sleep 5
while netstat -tnp 2>/dev/null | grep ":$port" | grep -q 'ESTABLISHED'; do
  sleep 5
done

~/Dev/environment/bin/dev --down
